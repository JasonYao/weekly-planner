#!/usr/bin/env bash

set -e # Fails on the first error

##
# Utilizes Github Pages to deploy the generated
# pdf online
##

# shellcheck source=bin/utils.sh
source "$(dirname "$0")/utils.sh"

repo_name="weekly-planner"
years=(
    # Last year
    "$(date --date='-1 year' +'%Y')"

    # Current year
    "$(date +'%Y')"

    # Years 1 -> 5 in the future
    "$(date --date='+1 year' +'%Y')"
    "$(date --date='+2 year' +'%Y')"
    "$(date --date='+3 year' +'%Y')"
    "$(date --date='+4 year' +'%Y')"
    "$(date --date='+5 year' +'%Y')"
)

function start() {
    # Some source used from the sample .pre-commit files by the golang team,
    # at https://tip.golang.org/misc/git/pre-commit

    info "The TRAVIS_BRANCH value is: $TRAVIS_BRANCH"
    info "The TRAVIS_PULL_REQUEST value is: $TRAVIS_PULL_REQUEST"

    if [[ "$TRAVIS_BRANCH" == "source" ]] && [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then
        deploy_via_github_pages
    else
        info "Deployment: Skipping deployment of the resume due to not meeting deployment conditions"
    fi
}

function deploy_via_github_pages() {
    stage_files_for_deployment
    setup_git_configurations
    deploy_files
    success "Deployment: Resume is now deployed"
}

function stage_files_for_deployment() {
    info "Staging: Staging files for deployment"
    for year in "${years[@]}"
    do
        planner_tex_file_name="weekly-planner-${year}"
        biweekly_print_version_file_name="biweekly-print-version-${year}"

        mv "${planner_tex_file_name}.pdf" docs/
        mv "${planner_tex_file_name}.jpg" docs/

        mv "${biweekly_print_version_file_name}.pdf" docs/
        mv "${biweekly_print_version_file_name}.jpg" docs/
    done
    success "Staging: Staged all files for deployment"
}

function setup_git_configurations() {
    info "Git Config: Setting up git for automated pushing"
    git init

    # Sets up the repo to push as myself
    git config user.name "${GIT_AUTHOR_NAME}"
    git config user.email "${GIT_AUTHOR_EMAIL}"
    git remote add upstream "https://$GITHUB_TOKEN@github.com/JasonYao/${repo_name}.git"
    success "Git Config: Setup git for automated pushing"
}

function deploy_files() {
    # Commit a new build and push to master (from which Github
    # Pages will auto deploy whatever is in the docs/ directory
    # on the master branch to the world
    git fetch upstream
    git reset upstream/master
    git add -A .
    git commit -m "[Build] ${TRAVIS_COMMIT}"
    git push -q upstream HEAD:master
}

start
